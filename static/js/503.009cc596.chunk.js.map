{"version":3,"file":"static/js/503.009cc596.chunk.js","mappings":"8OA4DA,OAAeA,EAAAA,EAAAA,oBApDG,SAAC,GAA8B,IAAD,IAA3BC,KAAAA,OAA2B,MAApB,cAAoB,EAC9C,GAAwBC,EAAAA,EAAAA,IAAOC,EAAAA,GAAAA,aAAqBF,GAAOG,EAAAA,IAAnDC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACRC,GAAaF,IAASC,EACtBE,GAAa,OAAJH,QAAI,IAAJA,OAAA,EAAAA,EAAMI,UAAW,GAChC,OACE,iBAAKC,UAAU,aAAf,UACGH,IACC,+BACE,UAAC,KAAD,CAAQI,WAAY,OAAQC,aAAc,GAAIC,cAAe,OAA7D,WACE,SAAC,KAAD,WACE,SAACC,EAAA,EAAD,OAEF,SAAC,KAAD,WACE,SAACA,EAAA,EAAD,OAEF,SAAC,KAAD,WACE,SAACA,EAAA,EAAD,OAEF,SAAC,KAAD,WACE,SAACA,EAAA,EAAD,OAEF,SAAC,KAAD,WACE,SAACA,EAAA,EAAD,YAKNP,IACA,SAAC,KAAD,CAAQI,WAAY,OAAQC,aAAc,GAAIC,cAAe,OAA7D,SACGL,EAAOO,OAAS,GACfP,EAAOQ,KAAI,SAACC,GAAD,OACT,SAAC,KAAD,WACE,SAACH,EAAA,EAAD,CAAWG,KAAMA,KADDA,EAAKC,cAqBO,CAC1CC,kBATF,WACE,OACE,cAAGT,UAAU,yBAAb,yDC1BJ,EAzBiB,WACf,OACE,UAAC,EAAAU,SAAD,YACE,qBAASV,UAAU,qCAAnB,WACE,eAAIA,UAAU,iDAAd,0BAGA,SAAC,EAAD,CAAWT,KAAK,oBAElB,qBAASS,UAAU,qCAAnB,WACE,eAAIA,UAAU,iDAAd,wBAGA,SAAC,EAAD,CAAWT,KAAK,kBAElB,qBAASS,UAAU,qCAAnB,WACE,eAAIA,UAAU,iDAAd,uBAGA,SAAC,EAAD,CAAWT,KAAK","sources":["components/movie/MovieList.js","pages/HomePage.js"],"sourcesContent":["import React from \"react\";\nimport { SwiperSlide, Swiper } from \"swiper/react\";\nimport MovieCard, { MovieCardSkeleton } from \"./MovieCard\";\nimport useSWR from \"swr\";\nimport { fetcher, tmdbAPI } from \"apiConfig/config\";\nimport PropTypes from \"prop-types\";\nimport { withErrorBoundary } from \"react-error-boundary\";\n\nconst MovieList = ({ type = \"now_playing\" }) => {\n  const { data, error } = useSWR(tmdbAPI.getMovieList(type), fetcher);\n  const isLoading = !data && !error;\n  const movies = data?.results || [];\n  return (\n    <div className=\"movie-list\">\n      {isLoading && (\n        <>\n          <Swiper grabCursor={\"true\"} spaceBetween={40} slidesPerView={\"auto\"}>\n            <SwiperSlide>\n              <MovieCardSkeleton></MovieCardSkeleton>\n            </SwiperSlide>\n            <SwiperSlide>\n              <MovieCardSkeleton></MovieCardSkeleton>\n            </SwiperSlide>\n            <SwiperSlide>\n              <MovieCardSkeleton></MovieCardSkeleton>\n            </SwiperSlide>\n            <SwiperSlide>\n              <MovieCardSkeleton></MovieCardSkeleton>\n            </SwiperSlide>\n            <SwiperSlide>\n              <MovieCardSkeleton></MovieCardSkeleton>\n            </SwiperSlide>\n          </Swiper>\n        </>\n      )}\n      {!isLoading && (\n        <Swiper grabCursor={\"true\"} spaceBetween={40} slidesPerView={\"auto\"}>\n          {movies.length > 0 &&\n            movies.map((item) => (\n              <SwiperSlide key={item.id}>\n                <MovieCard item={item}></MovieCard>\n              </SwiperSlide>\n            ))}\n        </Swiper>\n      )}\n    </div>\n  );\n};\nMovieList.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n\nfunction FallbackComponent() {\n  return (\n    <p className=\"bg-red-50 text-red-400\">\n      Something went wrong with this component\n    </p>\n  );\n}\n\nexport default withErrorBoundary(MovieList, {\n  FallbackComponent,\n});\n","import React, { Fragment } from \"react\";\nimport MovieList from \"../components/movie/MovieList\";\n\nconst HomePage = () => {\n  return (\n    <Fragment>\n      <section className=\"movies-layout page-container pb-20\">\n        <h2 className=\"capitalize text-white mb-10 text-3xl font-bold\">\n          Now playing\n        </h2>\n        <MovieList type=\"now_playing\"></MovieList>\n      </section>\n      <section className=\"movies-layout page-container pb-20\">\n        <h2 className=\"capitalize text-white mb-10 text-3xl font-bold\">\n          Top rated\n        </h2>\n        <MovieList type=\"top_rated\"></MovieList>\n      </section>\n      <section className=\"movies-layout page-container pb-20\">\n        <h2 className=\"capitalize text-white mb-10 text-3xl font-bold\">\n          Trending\n        </h2>\n        <MovieList type=\"popular\"></MovieList>\n      </section>\n    </Fragment>\n  );\n};\n\nexport default HomePage;\n"],"names":["withErrorBoundary","type","useSWR","tmdbAPI","fetcher","data","error","isLoading","movies","results","className","grabCursor","spaceBetween","slidesPerView","MovieCard","length","map","item","id","FallbackComponent","Fragment"],"sourceRoot":""}